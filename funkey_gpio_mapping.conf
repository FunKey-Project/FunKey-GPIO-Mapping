##################################
# Funkey GPIO keymap config file #
##################################
# Format:
#
# 	- First all GPIO Pin numbers must be declared (integers separated by commas)
#	  Example: 0,1,2,3,4,6,7,11,12,13,14,15
#
#	- Then the mapping can be done as follows (one line per mapping):
#	  Pin_number[+Pin_number...], type_mapping, value, str_help_name_pin, str_help_fct_pin
#	
#	  args: * Pin_number is the pin number concerned by the maping, 
#				add +Pin_number for multiple touch mapping (not limited in nb of pins)
#			* type_mapping can be KEYBOARD or SHELL_COMMAND
#			* value is :
#					if type_mapping==KEYBOARD: the keycode from /usr/include/linux/input.h]
#					if type_mapping==SHELL_COMMAND: the shell command to exec
#			* str_help_name_pin is a sweet name for the pin (ex: PB5)
#			* str_help_fct_pin is an help str to indicate the function of this mapping 



###################################
#	Pins declaration:
0,1,2,3,4,6,7,11,12,13,14,15


###################################
#	Mapping:
6, KEYBOARD, KEY_S, KEY_S, Start
7, KEYBOARD, KEY_F, KEY_F, Fn
3, KEYBOARD, KEY_U, KEY_U, Up
4, KEYBOARD, KEY_L, KEY_L, Left
1, KEYBOARD, KEY_D, KEY_D, Down
0, KEYBOARD, KEY_R, KEY_R, Right
15, KEYBOARD, KEY_N, KEY_N, R1
2, KEYBOARD, KEY_M, KEY_M, L1
12, KEYBOARD, KEY_B, KEY_B, B
14, KEYBOARD, KEY_A, KEY_A, A
13, KEYBOARD, KEY_X, KEY_X, X
11, KEYBOARD, KEY_Y, KEY_Y, Y
7+7, KEYBOARD, KEY_K, KEY_K, Select
7+15, KEYBOARD, KEY_V, KEY_V, L2
7+2, KEYBOARD, KEY_O, KEY_O, R2
#7+3, SHELL_COMMAND, echo "Volume up", 6+3, Volume up
#7+1, SHELL_COMMAND, echo "Volume down", 6+1, Volume down
#7+0, SHELL_COMMAND, echo "Brightness up", 6+0, Brightness up
#7+4, SHELL_COMMAND, echo "Brightness down", 6+4, Brightness down
7+3, SHELL_COMMAND, /root/shell_cmds/start_gpsp.sh, 6+3, start gpsp
7+1, SHELL_COMMAND, /root/shell_cmds/start_pcsx.sh, 6+1, start pcsx
7+0, SHELL_COMMAND, /root/shell_cmds/start_psnes.sh, 6+0, start psnes
7+4, SHELL_COMMAND, /root/shell_cmds/start_mednafen.sh, 6+4, start mednafen GBC
7+11, SHELL_COMMAND, /root/shell_cmds/stop_all_emulators.sh, 6+4, stop all emulators


